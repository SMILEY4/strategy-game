AWSTemplateFormatVersion: "2010-09-09"

Parameters:
    ApiAppDomain:
        Type: "String"
        Description: "Domain name of the api (without www)"
        Default: "api.strategy-game.lruegner.de"
    HostedZoneId:
        Type: "String"
        Description: "Id of the hosted zone of the domain"
        Default: "Z0864027FH95HV1Z970G"
    Ec2InstanceKeyPairName:
        Type: "String"
        Description: "Name of a key-pair for ec2-instances"
        Default: "ec2-kp"

Resources:

   
    #===================================================================================================================
    #    EC2 Instance
    #===================================================================================================================

    ServerInstanceRole:
        Type: "AWS::IAM::Role"
        Properties:
            RoleName: !Join
                - ""
                -   - "strategy-game"
                    - ".server"
            Path: "/"
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -   Effect: "Allow"
                        Principal:
                            Service:
                                - "ec2.amazonaws.com"
                        Action:
                            - "sts:AssumeRole"
            ManagedPolicyArns:
                - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"

    ServerInstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            InstanceProfileName: !Join
                - ""
                -   - "strategy-game"
                    - "server"
            Path: "/"
            Roles:
                - !Ref ServerInstanceRole

    ServerSecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupName: !Join
                - ""
                -   - "strategy-game"
                    - ".server"
            GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
            SecurityGroupIngress:
                -   IpProtocol: tcp
                    FromPort: 8080
                    ToPort: 8080
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: tcp
                    FromPort: 443
                    ToPort: 443
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: tcp
                    FromPort: 8443
                    ToPort: 8443
                    CidrIp: 0.0.0.0/0
                -   IpProtocol: tcp
                    FromPort: 22
                    ToPort: 22
                    CidrIp: 0.0.0.0/0

    ServerInstance:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-07f04613f3950ffdd" # Ubuntu, 20.04 LTS, arm64
            InstanceType: "t4g.small"
            IamInstanceProfile: !Ref ServerInstanceProfile
            SecurityGroupIds:
                - !Ref ServerSecurityGroup
            KeyName: !Ref Ec2InstanceKeyPairName
            UserData:
                Fn::Base64: |
                    #!/bin/bash -xe

                    sudo apt update -y
                    sudo apt-get update -y
                    
                    # install aws tools
                    sudo apt-get install awscli -y
                    sudo apt install amazon-ecr-credential-helper -y

                    # install docker
                    sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                    sudo add-apt-repository "deb [arch=arm64] https://download.docker.com/linux/ubuntu focal stable"
                    apt-cache policy docker-ce
                    sudo apt install docker-ce -y

                    # configure docker usergoup
                    sudo usermod -a -G docker $USER
                    newgrp docker
    
                    # configure docker ecr login
                    mkdir ~/.docker
                    touch ~/.docker/config.json
                    echo "{\"credsStore\": \"ecr-login\"}" > ~/.docker/config.json
                    sudo service docker restart

                    # install docker compose
                    sudo apt-get install docker-compose-plugin -y

    #===================================================================================================================
    #    Route53
    #===================================================================================================================

    Route53Records:
        Type: "AWS::Route53::RecordSetGroup"
        Properties:
            HostedZoneId: !Ref HostedZoneId
            RecordSets:
                -   Name: !Join
                        - ""
                        -   - !Ref ApiAppDomain
                            - "."
                    Type: "A"
                    TTL: 300
                    ResourceRecords:
                        - !GetAtt ServerInstance.PublicIp

Outputs:
    UrlApi:
        Description: "The public url for the api"
        Value: !Join
            - ""
            -   - !Ref ApiAppDomain
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
    WebAppCertificateArn:
        Type: "String"
        Description: "Arn of the certificate for the webapp. Must be in region us-east-1"
        Default: "arn:aws:acm:us-east-1:627717213620:certificate/cdda0fd0-9560-4f70-b9bd-19b4fdb28967"
    WebAppDomain:
        Type: "String"
        Description: "Domain name of the webapp (without www)"
        Default: "strategy-game.lruegner.de"
    FrontendBucketName:
        Type: "String"
        Description: "the name of the s3 bucket holding the website"
        Default: "strategy-game.webapp"
    HostedZoneId:
        Type: "String"
        Description: "Id of the hosted zone of the domain"
        Default: "Z0864027FH95HV1Z970G"
    GeneralLogBucketName:
        Type: "String"
        Description: "The name of the s3-bucket to use for general system logs"
        Default: "strategy-game.logs"

Resources:

    #===================================================================================================================
    #    WebApp-Bucket
    #===================================================================================================================
    
    WebAppBucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Ref WebsiteDeploymentBucketName
            AccessControl: "Private"
            CorsConfiguration:
                CorsRules:
                    -   AllowedHeaders:
                            - "*"
                        AllowedMethods:
                            - "GET"
                        AllowedOrigins:
                            - "*"
                        MaxAge: 1800

    WebAppOriginAccessIdentity:
        Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: "strategy-game.webapp"

    WebAppBucketPolicy:
        Type: "AWS::S3::BucketPolicy"
        Properties:
            Bucket: !Ref WebAppBucket
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -   Effect: "Allow"
                        Principal:
                            CanonicalUser: !GetAtt WebAppOriginAccessIdentity.S3CanonicalUserId
                        Action: 's3:GetObject'
                        Resource: !Join
                            - ""
                            -   - "arn:aws:s3:::"
                                - !Ref WebAppBucket
                                - "/*"


    #===================================================================================================================
    #    Cloudfront
    #===================================================================================================================

    BasicAuthFunction:
        Type: "AWS::CloudFront::Function"
        Properties:
            Name: "strategy-game-basic-auth-function"
            AutoPublish: true
            FunctionCode: |
                var user = {
                    username: 'user',
                    password: '2Ny31EuPjrbu',
                }
                
                var response401 = {
                    statusCode: 401,
                    statusDescription: 'Unauthorized',
                    headers: {
                        'www-authenticate': {value:'Basic'},
                    }
                };

                function toB64(a) {
                    // source: https://gist.github.com/oeon/0ada0457194ebf70ec2428900ba76255
                    var c, d, e, f, g, h, i, j, o, b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", k = 0, l = 0, m = "", n = [];
                    if (!a) return a;
                    do c = a.charCodeAt(k++), d = a.charCodeAt(k++), e = a.charCodeAt(k++), j = c << 16 | d << 8 | e, 
                    f = 63 & j >> 18, g = 63 & j >> 12, h = 63 & j >> 6, i = 63 & j, n[l++] = b.charAt(f) + b.charAt(g) + b.charAt(h) + b.charAt(i); while (k < a.length);
                    return m = n.join(""), o = a.length % 3, (o ? m.slice(0, o - 3) :m) + "===".slice(o || 3);
                }
                
                function handler(event) {
                    var request = event.request;
                    var headers = request.headers;
                    var auth = request.headers.authorization && request.headers.authorization.value;
                    if(!auth || !auth.startsWith('Basic ')) {
                        return response401
                    } else {
                        var authString = 'Basic ' + toB64(user.username + ':' + user.password);
                        if(authString === auth) {
                            return request
                        } else {
                            return response401
                        }
                    }
                }
            FunctionConfig:
                Comment: ""
                Runtime: "cloudfront-js-1.0"

    CloudFrontDistribution:
        Type: "AWS::CloudFront::Distribution"
        Properties:
            DistributionConfig:
                Aliases:
                    - !Join
                        - ""
                        -   - ""
                            - !Ref WebAppDomain
                Origins:
                    -   DomainName: !Join
                            - ""
                            -   - !Ref WebAppBucket
                                - ".s3.eu-central-1.amazonaws.com"
                        Id: !Ref WebAppBucket
                        S3OriginConfig:
                            OriginAccessIdentity: !Join
                                - ""
                                -   - "origin-access-identity/cloudfront/"
                                    - !Ref WebAppOriginAccessIdentity
                Enabled: true
                DefaultRootObject: index.html
                DefaultCacheBehavior:
                    TargetOriginId: !Ref WebAppBucket
                    ViewerProtocolPolicy: "redirect-to-https"
                    AllowedMethods:
                        - "GET"
                        - "HEAD"
                        - "OPTIONS"
                    DefaultTTL: 0
                    MaxTTL: 0
                    MinTTL: 0
                    ForwardedValues:
                        QueryString: false
                        Headers:
                            - "Origin"
                            - "Access-Control-Request-Headers"
                            - "Access-Control-Request-Method"
                    FunctionAssociations:
                        -   EventType: "viewer-request"
                            FunctionARN: !GetAtt BasicAuthFunction.FunctionARN
                ViewerCertificate:
                    AcmCertificateArn: !Ref WebAppCertificateArn
                    MinimumProtocolVersion: "TLSv1.2_2021"
                    SslSupportMethod: "sni-only"
                HttpVersion: "http2"
                PriceClass: "PriceClass_100"
                Logging:
                    Bucket: !Join
                        - ""
                        -   - !Ref GeneralLogBucketName
                            - ".s3.amazonaws.com"
                    Prefix: "cloudfront/"
                    IncludeCookies: false


    #===================================================================================================================
    #    Route53
    #===================================================================================================================

    Route53Records:
        Type: "AWS::Route53::RecordSetGroup"
        Properties:
            HostedZoneId: !Ref HostedZoneId
            RecordSets:
                -   Name: !Join
                        - ""
                        -   - ""
                            - !Ref WebAppDomain
                            - "."
                    Type: "A"
                    AliasTarget:
                        DNSName: !GetAtt CloudFrontDistribution.DomainName
                        HostedZoneId: "Z2FDTNDATAQYW2"
